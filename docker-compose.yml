services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb","curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres
    ports:
      - "5050:80" # Expose PgAdmin on port 5050 of the host
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

  fastapi:
    build: .
    volumes:
      - ./:/myapp/
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "8000:8000" # Expose FastAPI on port 8000 of the host
 

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
    - ./nginx.conf:/etc/nginx.conf
    - ./default.conf:/etc/nginx/conf.d/default.conf

    depends_on:
      - fastapi
    networks:
      - app-network

  test:
    build: .
    entrypoint: ["pytest"]  # Use pytest as the entrypoint
    command: ["tests/"]     # Specify the directory or file to test
    volumes:
      - ./:/myapp/
    depends_on:
      - postgres
      - fastapi
    environment:
      PYTHONPATH: /myapp
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/myappdb
    networks:
      - app-network

volumes:
  postgres-data:
  pgadmin-data:

networks:
  app-network: